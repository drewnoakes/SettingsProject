<Window
  x:Class="SettingsProject.LaunchProfilesWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:SettingsProject"
  xmlns:shell="clr-namespace:SettingsProject.Utils"
  mc:Ignorable="d"
  Icon="VisualStudio.Preview.ico"
  Title="{x:Static local:Resources.LaunchProfilesWindowTitleText}"
  Height="520"
  Width="800"
  MinWidth="600"
  x:ClassModifier="internal">

  <Window.Resources>

    <Style TargetType="Button" x:Key="ToolbarButton">
      <Setter Property="Padding" Value="4" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Margin" Value="4,4,0,4" />
    </Style>

    <!-- minimal toolbar template -->
    <Style TargetType="{x:Type ToolBar}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToolBar}">
            <ToolBarPanel IsItemsHost="True" Name="PART_ToolBarPanel" SnapsToDevicePixels="True" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:AsyncLoadViewModel}">
      <TextBlock Text="{Binding Text}" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:LaunchProfilesWindowViewModel}">
      <Grid>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200" MinWidth="140" />
          <ColumnDefinition Width="8" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Profile List and Management -->
        <Border Background="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}" Padding="8,0,0,8">
          <DockPanel>

            <ToolBar DockPanel.Dock="Top" BorderThickness="0" Background="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}" ToolBarTray.IsLocked="True" OverflowMode="Never">
              <Menu VerticalAlignment="Center">
                <MenuItem ToolTip="{x:Static local:Resources.LaunchProfileMenuNewToolTip}" ItemsSource="{Binding Path=ProfileKinds}" UsesItemContainerTemplate="False">
                  <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="{x:Static local:Resources.LaunchProfileMenuNewText}" Foreground="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
                      <Path Fill="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" Data="M 0 0 H 6 L 3 4 Z" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="True" />
                    </StackPanel>
                  </MenuItem.Header>
                  <MenuItem.ItemContainerStyle>
                    <Style>
                      <Setter Property="MenuItem.Header" Value="{Binding DisplayName}" />
                      <Setter Property="MenuItem.Icon">
                        <Setter.Value>
                          <Image Width="16" Height="16">
                            <Image.Source>
                              <DrawingImage Drawing="{Binding IconDrawing}" />
                            </Image.Source>
                          </Image>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="MenuItem.Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ToolBar}, Path=DataContext.NewCommand}" />
                      <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                    </Style>
                  </MenuItem.ItemContainerStyle>
                </MenuItem>
              </Menu>
              <Button Style="{StaticResource ToolbarButton}" ToolTip="{x:Static local:Resources.LaunchProfileMenuDuplicateToolTip}" Command="{Binding CloneCommand}" CommandParameter="{Binding SelectedProfile}">
                <Rectangle Width="16" Height="16" Fill="{StaticResource CloneIconBrush}" />
              </Button>
              <Button Style="{StaticResource ToolbarButton}" ToolTip="{x:Static local:Resources.LaunchProfileMenuDeleteToolTip}" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedProfile}">
                <Rectangle Width="16" Height="16" Fill="{StaticResource DeleteIconBrush}" />
              </Button>
              <Button Style="{StaticResource ToolbarButton}" ToolTip="{x:Static local:Resources.LaunchProfileMenuRenameToolTip}" Command="{Binding RenameCommand}" CommandParameter="{Binding SelectedProfile}">
                <Rectangle Width="16" Height="16" Fill="{StaticResource RenameIconBrush}" />
              </Button>
            </ToolBar>

            <ListBox ItemsSource="{Binding Profiles}"
                     SelectedItem="{Binding SelectedProfile}"
                     BorderThickness="0"
                     BorderBrush="Transparent"
                     Background="{DynamicResource {x:Static shell:VsBrushes.WindowKey}}">
              <ListBox.InputBindings>
                <KeyBinding Key="F2" Command="{Binding RenameCommand}" />
              </ListBox.InputBindings>
              <ListBox.ItemTemplate>
                <DataTemplate DataType="local:LaunchProfileViewModel">
                  <DockPanel Margin="8">
                    <Image DockPanel.Dock="Left" Width="16" Height="16">
                      <Image.Source>
                        <DrawingImage Drawing="{Binding Kind.IconDrawing}" />
                      </Image.Source>
                    </Image>
                    <local:RenameLabel Margin="8,0,0,0" Text="{Binding Path=Name, Mode=TwoWay}" IsRenaming="{Binding Path=IsRenaming, Mode=TwoWay}" />
                  </DockPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
          </DockPanel>
        </Border>

        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="16" Background="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}" BorderThickness="0" SnapsToDevicePixels="True" />

        <!-- Profile Edit -->
        <local:SettingsList Grid.Column="2" Settings="{Binding Path=SelectedProfile.Settings}" />

      </Grid>
    </DataTemplate>

  </Window.Resources>

  <Border Background="{DynamicResource {x:Static shell:VsBrushes.WindowKey}}">
    <ContentPresenter Content="{Binding}" />
  </Border>

</Window>